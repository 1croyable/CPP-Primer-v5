-------------------------------------------------------------------------2.30
//顶层的const指的是对象是一个常量，而底层的与指针和引用有关，指针的定义中靠左的、放在类型名前的那个const是底层的，而引用只有底层的const
const int v2 = 0;                                       顶层const 
int v1 = v2;                                            啥也不是
int *p1 = &v1, &r1 = v1                                 p1,r1啥也不是
const int *p2 = &v2, *const p3 = &i, &r2 = v2;          p2是底层的,p3是顶层和底层的，r2是底层的

---------------------------------------------------------------------2.31
r1 = v2                     不合法，v2是一个顶层const的常量对象，不能被修改，r1是普通引用，不能指向v2，否则v2可能被修改
p1 = p2;                    不合法，两个指针赋值必须具有底层const性质，理由同r1 = v2
p2 = p1;                    合法，p2指向p1所指向的对象，p1指向了v1，是一个可以修改的int对象，p2“自以为是地”不去修改它，这没有关系
p1 = p3;                    不合法，两个指针赋值必须具有底层const性质，理由同r1 = v2
p2 = p3;                    合法，p2和p3同为底层const,二者所指对象不会被修改，p3虽是顶层const，但是不影响它把指针值拷贝给p2
