*iter++ 合法，先后置递增返回之前的那个指针，再解引用

(*iter)++ 合法，先解引用，将结果递增

*iter.empty() 不合法，.和()优先级相同。先成员选择，选择iter对象的empty函数，
              但是iterator没有empty()函数，他想调用的是解引用后的那个string是否为空串。

iter -> empty() 合法，两种选择运算符.和-> 下标运算符[] 函数调用和函数构造的()优先级相同而且除了::外是最高的
                调用iter所指对象的()，
                等价于(*iter).empty()

++*iter; 合法，前置++和*优先级相同，而且比较高。先解引用后递增

iter++->empty(); 合法，后置递增的优先级比前置++和*都高一层，但是高不过->和()它们 表示先iter->empty()后调用后置递增